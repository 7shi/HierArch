<?xml version="1.0" encoding="utf-8"?>
<HAClass Type="Public" Text="XmlParser" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54">
  <HAObject Type="Private" Text="stream:Stream" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
  <HAObject Type="Private" Text="element:string" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54">
    <HAObject Type="Private" Text="name:string" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
    <HAObject Type="Private" Text="attr:Hashtable" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
    <HAObject Type="Private" Text="letter:bool" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
  </HAObject>
  <HAObject Type="Private" Text="data:string" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
  <HAObject Type="Public" Text="dec:Decoder" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
  <Header>
    <HAFunc Type="Text" Text="ヘッダ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/02/16 4:18:54">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />>
      <Source SelectionStart="76" SelectionLength="0">using System;
using System.Collections;
using System.IO;
using System.Text;
</Source>
    </HAFunc>
  </Header>
  <Body>
    <HAFunc Type="Class" Text="本体" IsExpanded="true" IsSelected="false" AllowDrag="false" LastModified="2003/02/16 4:18:54">
      <Arguments />
      <Comment SelectionStart="39" SelectionLength="0">&lt;summary&gt;
XmlReader の簡易版です。
&lt;/summary&gt;
</Comment>
      <Source SelectionStart="0" SelectionLength="0" />>
      <HAFunc Type="Public" Text="__CLASS" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54">
        <Arguments>
          <HAObject Type="Private" Text="stream:Stream" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0">&lt;summary&gt;
コンストラクタです。
&lt;/summary&gt;
</Comment>
        <Source SelectionStart="157" SelectionLength="0">this.stream = stream;
this.element = this.name = this.data = "";
this.attr = new Hashtable();
this.dec = Encoding.Default.GetDecoder();
this.letter = false;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="Close" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />>
        <Source SelectionStart="15" SelectionLength="0">stream = null;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="get_Name:string" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />>
        <Source SelectionStart="18" SelectionLength="0">return this.name;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="get_Attributes:Hashtable" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />>
        <Source SelectionStart="18" SelectionLength="0">return this.attr;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="get_Data:string" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />>
        <Source SelectionStart="18" SelectionLength="0">return this.data;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="Read:bool" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54">
        <Arguments />
        <HAObject Type="Private" Text="data:MemoryStream" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
        <HAObject Type="Private" Text="element:MemoryStream" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
        <HAObject Type="Private" Text="ch:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
        <HAObject Type="Private" Text="state:int" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
        <Comment SelectionStart="0" SelectionLength="0" />>
        <Source SelectionStart="1005" SelectionLength="0">data    = new MemoryStream();
element = new MemoryStream();
state   = 0;

while ((ch = stream.ReadByte()) != -1)
{
	if ((state == 1 || state == 4) &amp;&amp; ch == (int)'&gt;')
	{
		break;
	}
	else if (ch == (int)'&lt;')
	{
		if (state == 1)
		{
			data.WriteByte((byte)ch);
			data.Write(element.ToArray(), 0, (int)element.Length);
			element.SetLength(0);
		}
		else
		{
			state = 1;
		}
	}
	else if (state &gt;= 1)
	{
		element.WriteByte((byte)ch);
		if (element.Length == 3)
		{
			byte[] e = element.ToArray();
			if (e[0] == (byte)'!'
				&amp;&amp; e[1] == (byte)'-'
				&amp;&amp; e[2] == (byte)'-')
			{
				state = 2;
			}
		}
		if ((state == 2 || state == 3) &amp;&amp; ch == (int)'-')
		{
			state++;
		}
		else if (state &gt; 2)
		{
			state = 2;
		}
	}
	else
	{
		data.WriteByte((byte)ch);
	}
}
this.element = this.ConvertString(element.ToArray());
this.name = "";
this.attr.Clear();
this.data = this.ConvertString(data.ToArray());
data.Close();
element.Close();
if (this.element.Length &lt; 1) return false;

this.Parse();
return true;
</Source>
        <HAFunc Type="Private" Text="ConvertString:string" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54">
          <Arguments>
            <HAObject Type="Private" Text="bytes:byte[]" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
          </Arguments>
          <HAObject Type="Private" Text="chars:char[]" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
          <Comment SelectionStart="0" SelectionLength="0" />>
          <Source SelectionStart="177" SelectionLength="0">if (bytes.Length &lt; 1) return "";
chars = new char[this.dec.GetCharCount(bytes, 0, bytes.Length)];
this.dec.GetChars(bytes, 0, bytes.Length, chars, 0);
return new String(chars);
</Source>
        </HAFunc>
        <HAFunc Type="Private" Text="Parse" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/02/16 4:18:54">
          <Arguments />
          <HAObject Type="Private" Text="xmlState:int" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
          <HAObject Type="Private" Text="aname:StringBuilder" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
          <HAObject Type="Private" Text="adata:StringBuilder" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
          <HAObject Type="Private" Text="len:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
          <HAObject Type="Private" Text="state:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
          <HAObject Type="Private" Text="ch:char" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
          <HAObject Type="Private" Text="quot:char" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/02/16 4:18:54" />>
          <Comment SelectionStart="0" SelectionLength="0" />>
          <Source SelectionStart="215" SelectionLength="0">if (this.element.StartsWith("!--"))
{
	this.name = "!--";
	string ad = this.element.Substring(3);
	if (ad.EndsWith("--")) ad = ad.Substring(0, ad.Length - 2);
	if (ad.Length &gt; 0) this.attr["value"] = ad;
	return;
}

aname = new StringBuilder();
adata = new StringBuilder();
xmlState = state = 0;
len = this.element.Length;
quot = '\0';
for (int i = 0; i &lt;= len; i++) {
	ch = (i &lt; len) ? this.element[i] : '\0';
	if (i == len
		|| (quot == '\0' &amp;&amp; (ch == ' ' || ch == '\r' || ch == '\n' || ch == '\t'))
		|| (state == 4 &amp;&amp; ch == quot))
	{
		if (state == 1)
		{
			state = 2;
		}
		else if (state == 3)
		{
			aname.Remove(0, aname.Length);
			state = 2;
		}
		else if (state == 4)
		{
			quot = '\0';
			if (aname.Length &gt; 0 &amp;&amp; adata.Length &gt; 0)
			{
				string an = this.letter ? aname.ToString()
					: aname.ToString().ToLower();
				this.attr[an] = adata.ToString();
			}
			if (aname.Length &gt; 0) aname.Remove(0, aname.Length);
			if (adata.Length &gt; 0) adata.Remove(0, adata.Length);
			state = 2;
		}
		continue;
	}
	if (state == 0)
	{
		state = 1;
	}
	else if (state == 2)
	{
		state = 3;
	}
	if (ch == '/')
	{
		if (state == 1)
		{
			if (this.name.Length &lt; 1)
			{
				xmlState = 1;
			}
			else
			{
				xmlState = 2;
			}
			continue;
		}
		else if (state == 3)
		{
			xmlState = 2;
			continue;
		}
	}
	if (ch == '?' &amp;&amp; (state == 1 || state == 3))
	{
		xmlState = 3;
		continue;
	}
	if (state == 1)
	{
		this.name += ch;
	}
	else if (state == 3)
	{
		if (ch == '=')
		{
			state = 4;
		}
		else
		{
			aname.Append(ch);
		}
	}
	else if (state == 4)
	{
		if (quot == '\0' &amp;&amp; (ch == '"' || ch == '\''))
		{
			quot = ch;
		}
		else
		{
			adata.Append(ch);
		}
	}
}
if (!letter) this.name = this.name.ToLower();

switch (xmlState)
{
	case 1:
		this.name = "/" + this.name;
		break;
	case 2:
		this.name += "/";
		break;
	case 3:
		this.name = "?" + this.name;
		break;
}
</Source>
        </HAFunc>
      </HAFunc>
    </HAFunc>
  </Body>
  <Footer>
    <HAFunc Type="Text" Text="フッタ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/02/16 4:18:54">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />>
      <Source SelectionStart="0" SelectionLength="0" />>
    </HAFunc>
  </Footer>
</HAClass>