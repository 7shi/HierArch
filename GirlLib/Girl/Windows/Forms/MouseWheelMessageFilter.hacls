<?xml version="1.0" encoding="utf-8"?>
<HAClass Type="Public" Text="MouseWheelMessageFilter:IMessageFilter" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/05 20:16:54">
  <Header>
    <HAFunc Type="Text" Text="ヘッダ" IsExpanded="false" IsSelected="true" AllowDrag="false" LastModified="2003/07/05 20:16:54">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="102" SelectionLength="0">using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;
</Source>
    </HAFunc>
  </Header>
  <Body>
    <HAFunc Type="Class" Text="本体" IsExpanded="true" IsSelected="false" AllowDrag="false" LastModified="2003/05/27 20:48:00">
      <Arguments />
      <Comment SelectionStart="46" SelectionLength="0">&lt;summary&gt;
MouseWheel イベントをフィルタします。
&lt;/summary&gt;
</Comment>
      <Source SelectionStart="444" SelectionLength="0">#region Win32

public const int WM_MOUSEWHEEL = 0x020A;

[StructLayout(LayoutKind.Sequential)]
public struct POINT
{
	public int x, y;
}

[DllImport("User32.dll")]
public static extern IntPtr WindowFromPoint(
	POINT p  // 座標
);

[DllImport("User32.dll")]
public static extern IntPtr SendMessage(
	IntPtr hWnd,    // 送信先ウィンドウのハンドル
	int Msg,        // メッセージ
	IntPtr wParam,  // メッセージの最初のパラメータ
	IntPtr lParam   // メッセージの 2 番目のパラメータ
);

#endregion
</Source>
      <HAFunc Type="Public" Text="PreFilterMessage:bool" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/27 20:47:26">
        <Arguments>
          <HAObject Type="Private" Text="m:ref Message" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/05/27 20:41:27" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="270" SelectionLength="0">if (m.Msg != WM_MOUSEWHEEL) return false;

Point p = Cursor.Position;
POINT pp = new POINT();
pp.x = p.X;
pp.y = p.Y;
IntPtr hWnd = WindowFromPoint(pp);
if (hWnd == m.HWnd || hWnd == IntPtr.Zero) return false;

SendMessage(hWnd, m.Msg, m.WParam, m.LParam);
return true;
</Source>
      </HAFunc>
    </HAFunc>
  </Body>
  <Footer>
    <HAFunc Type="Text" Text="フッタ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/05/27 20:37:47">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="0" SelectionLength="0" />
    </HAFunc>
  </Footer>
</HAClass>