<?xml version="1.0" encoding="utf-8"?>
<HAClass Type="Public" Text="TabControlEx:TabControl" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 21:51:26">
  <HAObject Type="Public" Text="Changed:event EventHandler" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/16 20:24:22" />
  <HAObject Type="Protected" Text="tabContextMenu:ContextMenu" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:17:01" />
  <HAObject Type="Protected" Text="dragTarget:int" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:19:58">
    <HAObject Type="Protected" Text="clickPoint:Point" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:20:05" />
    <HAObject Type="Protected" Text="noMove:bool" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:20:02" />
  </HAObject>
  <Header>
    <HAFunc Type="Text" Text="ヘッダ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/07/16 20:23:03">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="64" SelectionLength="0">using System;
using System.Drawing;
using System.Windows.Forms;
</Source>
    </HAFunc>
  </Header>
  <Body>
    <HAFunc Type="Class" Text="本体" IsExpanded="true" IsSelected="false" AllowDrag="false" LastModified="2003/07/16 20:16:48">
      <Arguments />
      <Comment SelectionStart="46" SelectionLength="0">&lt;summary&gt;
タブ操作を拡張した TabControl です。
&lt;/summary&gt;
</Comment>
      <Source SelectionStart="0" SelectionLength="0" />
      <HAFunc Type="Public" Text="__CLASS" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:20:36">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0">&lt;summary&gt;
コンストラクタです。
&lt;/summary&gt;
</Comment>
        <Source SelectionStart="101" SelectionLength="0">this.tabContextMenu = null;
this.dragTarget = -1;
this.noMove = true;
this.clickPoint = Point.Empty;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="get_TabContextMenu:ContextMenu" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:18:03">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="28" SelectionLength="0">return this.tabContextMenu;
</Source>
        <HAFunc Type="Public" Text="set_TabContextMenu:ContextMenu" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:17:58">
          <Arguments />
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="29" SelectionLength="0">this.tabContextMenu = value;
</Source>
        </HAFunc>
      </HAFunc>
      <HAFunc Type="Public" Text="GetTabPage:TabPage" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:18:40">
        <Arguments>
          <HAObject Type="Private" Text="x:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:18:26" />
          <HAObject Type="Private" Text="y:int" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/16 20:18:28" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="93" SelectionLength="0">int index = this.GetTabIndex(x, y);
if (index &lt; 0) return null;
return this.TabPages[index];
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="GetTabIndex:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:19:03">
        <Arguments>
          <HAObject Type="Private" Text="x:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:18:49" />
          <HAObject Type="Private" Text="y:int" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/16 20:18:51" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="128" SelectionLength="0">int len = this.TabCount;
for (int i = 0; i &lt; len; i++)
{
	if (this.GetTabRect(i).Contains(x, y))
	{
		return i;
	}
}
return -1;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="AddTabPage" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:19:26">
        <Arguments>
          <HAObject Type="Private" Text="prev:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:19:10" />
          <HAObject Type="Private" Text="page:TabPage" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/16 20:19:14" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="36" SelectionLength="0">this.InsertTabPage(prev + 1, page);
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="InsertTabPage" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:19:51">
        <Arguments>
          <HAObject Type="Private" Text="next:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:19:34" />
          <HAObject Type="Private" Text="page:TabPage" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/16 20:19:36" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="558" SelectionLength="0">Control[] ctrls_p = new Control[page.Controls.Count];
string text_p = page.Text;
page.Controls.CopyTo(ctrls_p, 0);
page.Controls.Clear();
this.TabPages.Add(page);
for (int i = this.TabCount - 1; i &gt;= next; i--)
{
	Control[] ctrls;
	string text;
	if (i == next)
	{
		ctrls = ctrls_p;
		text = text_p;
	}
	else
	{
		TabPage tp_s = this.TabPages[i - 1];
		ctrls = new Control[tp_s.Controls.Count];
		tp_s.Controls.CopyTo(ctrls, 0);
		tp_s.Controls.Clear();
		text = tp_s.Text;
	}
	TabPage tp = this.TabPages[i];
	tp.Controls.AddRange(ctrls);
	tp.Text = text;
}
</Source>
      </HAFunc>
      <HAFunc Type="Protected" Text="OnMouseDown:override" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/16 20:21:00">
        <Arguments>
          <HAObject Type="Private" Text="e:MouseEventArgs" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/16 20:20:48" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="265" SelectionLength="0">base.OnMouseDown(e);

this.dragTarget = this.GetTabIndex(e.X, e.Y);
this.noMove = true;
this.clickPoint = new Point(e.X, e.Y);
if (e.Button != MouseButtons.Right
	|| this.dragTarget == this.SelectedIndex) return;

this.SelectedTab = this.TabPages[this.dragTarget];
</Source>
      </HAFunc>
      <HAFunc Type="Protected" Text="OnMouseMove:override" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 21:51:26">
        <Arguments>
          <HAObject Type="Private" Text="e:MouseEventArgs" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/16 20:21:08" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="965" SelectionLength="0">base.OnMouseMove(e);

if (e.Button != MouseButtons.Left || this.dragTarget == -1
	|| (this.noMove &amp;&amp; Math.Abs(e.X - this.clickPoint.X) &lt; 3
	&amp;&amp; Math.Abs(e.Y - this.clickPoint.Y) &lt; 3)) return;

this.noMove = false;
int len = this.TabCount;
Rectangle r_s = this.GetTabRect(0);
Rectangle r_e = this.GetTabRect(len - 1);
int index;
if (e.X &lt; r_s.Left + r_s.Width / 2)
{
	index = 0;
}
else if (e.X &gt; r_e.Right - r_e.Width / 2)
{
	index = len;
}
else
{
	index = this.GetTabIndex(e.X, r_s.Top);
	if (index &lt; 0 || index == this.dragTarget) return;

	Rectangle r = this.GetTabRect(index);
	if (e.X &gt; r.X + r.Width / 2) index++;
}
if (index == this.dragTarget || index - 1 == this.dragTarget) return;

bool f = this.Focused, v = this.Visible;
this.Visible = false;
TabPage tp = this.TabPages[this.dragTarget];
this.TabPages.Remove(tp);
if (index &gt; this.dragTarget) index--;
this.InsertTabPage(index, tp);
this.SelectedIndex = this.dragTarget = index;
this.Visible = v;
if (f) this.Focus();

if (this.Changed != null) this.Changed(this, EventArgs.Empty);
</Source>
      </HAFunc>
      <HAFunc Type="Protected" Text="OnMouseUp:override" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 20:21:44">
        <Arguments>
          <HAObject Type="Private" Text="e:MouseEventArgs" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/16 20:21:34" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="214" SelectionLength="0">base.OnMouseUp(e);

if (this.TabContextMenu != null &amp;&amp; e.Button == MouseButtons.Right
	&amp;&amp; this.dragTarget != -1)
{
	this.TabContextMenu.Show(this, new Point(e.X, e.Y));
}

this.dragTarget = -1;
this.noMove = true;
</Source>
      </HAFunc>
    </HAFunc>
  </Body>
  <Footer>
    <HAFunc Type="Text" Text="フッタ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/07/16 20:15:29">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="0" SelectionLength="0" />
    </HAFunc>
  </Footer>
</HAClass>