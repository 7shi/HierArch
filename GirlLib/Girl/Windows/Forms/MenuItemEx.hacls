<?xml version="1.0" encoding="utf-8"?>
<HAClass Type="Public" Text="MenuItemEx" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/17 0:49:53">
  <HAObject Type="Public" Text="Name:string" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:54:09" />
  <HAObject Type="Public" Text="Tag:object" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 15:00:00" />
  <HAObject Type="Protected" Text="menuItem:MenuItem" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:00:15" />
  <HAObject Type="Protected" Text="image:Image" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:00:20" />
  <HAObject Type="Protected" Text="light:Image" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:00:24" />
  <HAObject Type="Protected" Text="shadow:Image" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:00:26" />
  <HAObject Type="Protected" Text="font:Font" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:00:52" />
  <HAObject Type="Protected" Text="backImage:Bitmap" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/12 21:09:45" />
  <Header>
    <HAFunc Type="Text" Text="ヘッダ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/07/12 21:10:56">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="172" SelectionLength="0">using System;
using System.Collections;
using System.Drawing;
using System.Drawing.Text;
using System.IO;
using System.Runtime.InteropServices;
using System.Windows.Forms;
</Source>
    </HAFunc>
  </Header>
  <Body>
    <HAFunc Type="Class" Text="本体" IsExpanded="true" IsSelected="false" AllowDrag="false" LastModified="2003/07/12 21:10:39">
      <Arguments />
      <Comment SelectionStart="41" SelectionLength="0">&lt;summary&gt;
MenuItem の表示を拡張します。
&lt;/summary&gt;
</Comment>
      <Source SelectionStart="534" SelectionLength="0">public static string IconPath = null;
public static string Extension = null;

#region Win32

[DllImport("Gdi32.dll")]
public static extern bool BitBlt(
	IntPtr hdcDest, // コピー先デバイスコンテキストのハンドル
	int nXDest,     // コピー先長方形の左上隅の x 座標
	int nYDest,     // コピー先長方形の左上隅の y 座標
	int nWidth,     // コピー先長方形の幅
	int nHeight,    // コピー先長方形の高さ
	IntPtr hdcSrc,  // コピー元デバイスコンテキストのハンドル
	int nXSrc,      // コピー元長方形の左上隅の x 座標
	int nYSrc,      // コピー元長方形の左上隅の y 座標
	int dwRop       // ラスタオペレーションコード
);

public const int SRCCOPY = 0x00CC0020;

#endregion
</Source>
      <HAFunc Type="Public" Text="Apply:static Hashtable" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 0:54:26">
        <Arguments>
          <HAObject Type="Private" Text="menu:Menu" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 13:59:24" />
          <HAObject Type="Private" Text="images:Hashtable" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 13:59:28" />
          <HAObject Type="Private" Text="mne:bool" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 0:54:09" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="61" SelectionLength="0">Hashtable ret = new Hashtable();
Apply(menu, images, ret, mne);
return ret;
</Source>
        <HAFunc Type="Public" Text="Apply:static Hashtable" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 0:54:35">
          <Arguments>
            <HAObject Type="Private" Text="menu:Menu" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 13:59:24" />
            <HAObject Type="Private" Text="mne:bool" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 0:54:29" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="74" SelectionLength="0">Hashtable ret = new Hashtable();
Apply(menu, null, ret, mne);
return ret;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="Apply:static Hashtable" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 0:57:51">
          <Arguments>
            <HAObject Type="Private" Text="menu:Menu" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 13:59:24" />
            <HAObject Type="Private" Text="images:Hashtable" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 0:56:52" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="78" SelectionLength="0">Hashtable ret = new Hashtable();
Apply(menu, images, ret, false);
return ret;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="Apply:static Hashtable" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 0:56:40">
          <Arguments>
            <HAObject Type="Private" Text="menu:Menu" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 13:59:24" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="76" SelectionLength="0">Hashtable ret = new Hashtable();
Apply(menu, null, ret, false);
return ret;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="Apply:static" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/17 0:49:53">
          <Arguments>
            <HAObject Type="Private" Text="menu:Menu" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 13:59:51" />
            <HAObject Type="Private" Text="images:Hashtable" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 13:59:53" />
            <HAObject Type="Private" Text="map:Hashtable" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 13:59:56" />
            <HAObject Type="Private" Text="mne:bool" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 0:54:57" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="481" SelectionLength="0">if (menu is MenuItem)
{
	MenuItem mni = menu as MenuItem;
	if (!(mni.Parent is MainMenu)) // &amp;&amp; Environment.OSVersion.Platform != PlatformID.Win32NT
	{
		if (mne) mni.Text = RemoveMnemonic(mni.Text);
		if (images != null &amp;&amp; images.Contains(menu))
		{
			object obj = images[menu];
			if (obj is Image)
			{
				map[mni] = new __CLASS(mni, obj as Image);
			}
			else
			{
				map[mni] = new __CLASS(mni, obj as string);
			}
		}
		else
		{
			map[mni] = new __CLASS(mni);
		}
	}
}

foreach (MenuItem mi in menu.MenuItems)
{
	Apply(mi, images, map, mne);
}
</Source>
        </HAFunc>
      </HAFunc>
      <HAFunc Type="Protected" Text="Init:virtual" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/12 21:14:43">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="171" SelectionLength="0">this.Name = null;
this.Tag = null;
this.menuItem = null;
this.image = null;
this.light = null;
this.shadow = null;
this.font = Control.DefaultFont;
this.backImage = null;
</Source>
        <HAFunc Type="Public" Text="__CLASS" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:01:32">
          <Arguments />
          <Comment SelectionStart="0" SelectionLength="0">&lt;summary&gt;
コンストラクタです。
&lt;/summary&gt;
</Comment>
          <Source SelectionStart="13" SelectionLength="0">this.Init();
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="__CLASS" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:11:03">
          <Arguments>
            <HAObject Type="Private" Text="menuItem:MenuItem" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:02:00" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="39" SelectionLength="0">this.Init();
this.MenuItem = menuItem;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="__CLASS" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:11:07">
          <Arguments>
            <HAObject Type="Private" Text="menuItem:MenuItem" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:01:46" />
            <HAObject Type="Private" Text="image:Image" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:01:49" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="59" SelectionLength="0">this.Init();
this.MenuItem = menuItem;
this.Image = image;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="__CLASS" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 15:35:50">
          <Arguments>
            <HAObject Type="Private" Text="menuItem:MenuItem" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:01:46" />
            <HAObject Type="Private" Text="fileName:string" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:01:49" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="95" SelectionLength="0">this.Init();
this.MenuItem = menuItem;

this.Image = GetImage(fileName);
this.Name = fileName;
</Source>
        </HAFunc>
      </HAFunc>
      <HAFunc Type="Folder" Text="Properties" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:32:52">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="0" SelectionLength="0" />
        <HAFunc Type="Public" Text="get_Font:Font" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:32:55">
          <Arguments />
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="18" SelectionLength="0">return this.font;
</Source>
          <HAFunc Type="Public" Text="set_Font:Font" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:02:29">
            <Arguments />
            <Comment SelectionStart="0" SelectionLength="0" />
            <Source SelectionStart="19" SelectionLength="0">this.font = value;
</Source>
          </HAFunc>
        </HAFunc>
        <HAFunc Type="Public" Text="get_Image:Image" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:32:58">
          <Arguments />
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="19" SelectionLength="0">return this.image;
</Source>
          <HAFunc Type="Public" Text="set_Image:Image" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 16:08:17">
            <Arguments />
            <Comment SelectionStart="0" SelectionLength="0" />
            <Source SelectionStart="171" SelectionLength="0">if (this.light  != null) light .Dispose();
if (this.shadow != null) shadow.Dispose();

this.image = value;
this.light = MakeLight(value);
this.shadow = MakeShadow(value);
</Source>
          </HAFunc>
        </HAFunc>
        <HAFunc Type="Public" Text="get_MenuItem:MenuItem" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:32:59">
          <Arguments />
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="22" SelectionLength="0">return this.menuItem;
</Source>
          <HAFunc Type="Public" Text="set_MenuItem:MenuItem" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:03:24">
            <Arguments />
            <Comment SelectionStart="0" SelectionLength="0" />
            <Source SelectionStart="192" SelectionLength="0">this.menuItem = value;
value.OwnerDraw = true;
value.MeasureItem += new MeasureItemEventHandler(this.menuItem_MeasureItem);
value.DrawItem += new DrawItemEventHandler(this.menuItem_DrawItem);
</Source>
          </HAFunc>
        </HAFunc>
      </HAFunc>
      <HAFunc Type="Folder" Text="Event Handlers" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:03:51">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="0" SelectionLength="0" />
        <HAFunc Type="Private" Text="menuItem_MeasureItem" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:04:25">
          <Arguments>
            <HAObject Type="Private" Text="sender:object" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:04:03" />
            <HAObject Type="Private" Text="e:MeasureItemEventArgs" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:04:06" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="654" SelectionLength="0">StringFormat sf = new StringFormat();
sf.HotkeyPrefix = HotkeyPrefix.Show;
Size sz = Size.Truncate(e.Graphics.MeasureString(this.menuItem.Text, this.font, PointF.Empty, sf));
int w, h;
if (this.menuItem.Parent is MainMenu)
{
	w = sz.Width + 2;
	h = sz.Height;
}
else if (this.menuItem.Text == "-")
{
	w = 31;
	h = 3;
}
else
{
	w = sz.Width + 31;
	h = sz.Height + 2;
	if (h &lt; 22) h = 22;
	if (this.menuItem.Shortcut != Shortcut.None &amp;&amp; this.menuItem.ShowShortcut)
	{
		string st = GetShortcutText(this.menuItem.Shortcut);
		Size sz2 = Size.Truncate(e.Graphics.MeasureString(st, this.font));
		w += sz2.Width + 16;
	}
}
e.ItemWidth  = w;
e.ItemHeight = h;
</Source>
        </HAFunc>
        <HAFunc Type="Private" Text="menuItem_DrawItem" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/12 21:19:45">
          <Arguments>
            <HAObject Type="Private" Text="sender:object" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:04:03" />
            <HAObject Type="Private" Text="e:DrawItemEventArgs" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:04:06" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="843" SelectionLength="0">StringFormat sf = new StringFormat();
sf.HotkeyPrefix = HotkeyPrefix.Show;
Size sz = Size.Truncate(e.Graphics.MeasureString(this.menuItem.Text, this.font, PointF.Empty, sf));
Rectangle r = e.Bounds;
int x = r.X + (r.Width  - sz.Width ) / 2;
int y = r.Y + (r.Height - sz.Height) / 2;

Brush brush = SystemBrushes.WindowText;
if (!this.menuItem.Enabled || (e.State &amp; DrawItemState.Inactive) != 0) brush = SystemBrushes.ControlDark;

bool sel =(e.State &amp; DrawItemState.Selected) != 0 &amp;&amp; this.menuItem.Enabled;
if (this.menuItem.Parent is MainMenu)
{
	if (this.backImage == null)
	{
		IntPtr hdc1 = e.Graphics.GetHdc();
		this.backImage = new Bitmap(r.Width, r.Height);
		Graphics g = Graphics.FromImage(this.backImage);
		IntPtr hdc2 = g.GetHdc();
		bool ok = BitBlt(hdc2, 0, 0, r.Width, r.Height, hdc1, r.X, r.Y, SRCCOPY);
		g.ReleaseHdc(hdc2);
		g.Dispose();
		e.Graphics.ReleaseHdc(hdc1);
	}
	Point pt = Cursor.Position;
	Form f = (this.MenuItem.Parent as MainMenu).GetForm();
	pt.Offset(-f.Left, -f.Top);
	if ((e.State &amp; DrawItemState.HotLight) != 0
		|| (sel &amp;&amp; !e.Bounds.Contains(pt)))
	{
		DrawSelection(e.Graphics, r, false);
	}
	else if (sel)
	{
		e.Graphics.FillRectangle(SystemBrushes.ControlLight, r);
		e.Graphics.DrawLine(SystemPens.ControlDark, r.Left, r.Top, r.Left, r.Bottom);
		e.Graphics.DrawLine(SystemPens.ControlDark, r.Left, r.Top, r.Right - 1, r.Top);
		e.Graphics.DrawLine(SystemPens.ControlDark, r.Right - 1, r.Top, r.Right - 1, r.Bottom);
	}
	else
	{
		e.Graphics.DrawImage(this.backImage, r);
	}
	e.Graphics.DrawString(this.menuItem.Text, this.font, brush, x, y, sf);
	return;
}

if (!sel)
{
	Rectangle r1 = new Rectangle(r.X, r.Y, 22, r.Height);
	Rectangle r2 = new Rectangle(r.X + 22, r.Y, r.Width - 22, r.Height);
	e.Graphics.FillRectangle(SystemBrushes.Control, r1);
	e.Graphics.FillRectangle(SystemBrushes.Window, r2);
	if (!this.menuItem.Checked &amp;&amp; this.image != null)
	{
		Image img = this.light;
		if (!this.menuItem.Enabled) img = this.shadow;
		e.Graphics.DrawImage(img, r.X + 3, r.Y + 3);
	}
}
else
{
	DrawSelection(e.Graphics, r, false);
	if (!this.menuItem.Checked &amp;&amp; this.image != null)
	{
		e.Graphics.DrawImage(this.shadow, r.X + 4, r.Y + 4);
		e.Graphics.DrawImage(this.image , r.X + 2, r.Y + 2);
	}
}
int str_x = r.X + 28;
if (this.menuItem.Text == "-")
{
	e.Graphics.DrawLine(SystemPens.ControlDark, str_x, r.Y + 1, r.Right, r.Y + 1);
	return;
}
if (this.menuItem.Checked)
{
	string chk = (this.menuItem.RadioCheck) ? "h" : "a";
	Font f = new Font("Marlett", this.font.Size);
	Size sz_c = Size.Truncate(e.Graphics.MeasureString(chk, f));
	int sz_x = r.Left + (22 - sz_c.Width) / 2;
	int sz_y = r.Top + (r.Height - sz.Height) / 2;
	DrawSelection(e.Graphics, new Rectangle(r.Left, r.Top, 21, r.Height - 1), sel);
	e.Graphics.DrawString(chk, f, SystemBrushes.WindowText, sz_x, sz_y);
	f.Dispose();
}
e.Graphics.DrawString(this.menuItem.Text, this.font, brush, str_x, y, sf);
if (this.menuItem.Shortcut != Shortcut.None &amp;&amp; this.menuItem.ShowShortcut)
{
	string st = GetShortcutText(this.menuItem.Shortcut);
	Size sz2 = Size.Truncate(e.Graphics.MeasureString(st, this.font));
	e.Graphics.DrawString(st, this.font, brush, r.Right - sz2.Width - 16, y);
}
</Source>
        </HAFunc>
      </HAFunc>
      <HAFunc Type="Folder" Text="Static Methods" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 13:47:49">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="0" SelectionLength="0" />
        <HAFunc Type="Public" Text="operator MenuItem:static implicit" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:30:12">
          <Arguments>
            <HAObject Type="Private" Text="mix:MenuItemEx" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:29:51" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="21" SelectionLength="0">return mix.MenuItem;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="GetFileName:static string" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:47:07">
          <Arguments>
            <HAObject Type="Private" Text="name:string" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:43:12" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="32" SelectionLength="0">string ret;
if (__CLASS.IconPath != null)
{
	ret = Path.Combine(__CLASS.IconPath, name);
}
else
{
	ret = name;
}
if (__CLASS.Extension != null)
{
	ret += __CLASS.Extension;
}
return ret;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="GetImage:static Bitmap" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 15:34:24">
          <Arguments>
            <HAObject Type="Private" Text="fileName:string" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 15:33:43" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="176" SelectionLength="0">string fn = __CLASS.GetFileName(fileName);
if (!File.Exists(fn)) return null;

Bitmap icon = new Bitmap(fn);
Bitmap ret = new Bitmap(icon, 16, 16);
icon.Dispose();
return ret;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="GetShortcutText:static string" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:05:52">
          <Arguments>
            <HAObject Type="Private" Text="sc:Shortcut" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:05:40" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="107" SelectionLength="0">return sc.ToString()
	.Replace("Shift", "Shift+")
	.Replace("Ctrl" , "Ctrl+" )
	.Replace("Alt"  , "Alt+");
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="DrawSelection:static" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/12 20:42:59">
          <Arguments>
            <HAObject Type="Private" Text="g:Graphics" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:06:03" />
            <HAObject Type="Private" Text="rect:Rectangle" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:06:06" />
            <HAObject Type="Private" Text="dark:bool" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 14:06:08" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="178" SelectionLength="0">Brush b = new SolidBrush(GetSelectionColor(dark));
g.FillRectangle(b, rect);
b.Dispose();
g.DrawRectangle(SystemPens.Highlight, rect.X, rect.Y, rect.Width - 1, rect.Height - 1);
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="GetSelectionColor:static Color" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/12 21:21:08">
          <Arguments>
            <HAObject Type="Private" Text="dark:bool" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 12:37:53" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="0" SelectionLength="0">if (dark) return Mix(SystemColors.Highlight, SystemColors.Window);
return Mix(SystemColors.Highlight, 2, SystemColors.Window, 5);
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="MakeLight:static Bitmap" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 16:08:27">
          <Arguments>
            <HAObject Type="Private" Text="img:Image" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 13:16:30" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="0" SelectionLength="0">if (img == null) return null;

Bitmap ret = new Bitmap(img);
Size sz = ret.Size;
for (int y = 0; y &lt; sz.Height; y++)
{
	for (int x = 0; x &lt; sz.Width; x++)
	{
		Color c = ret.GetPixel(x, y);
		if (c.A &lt; 1) continue;
		
		ret.SetPixel(x, y, MakeLight(c));
	}
}
return ret;
</Source>
          <HAFunc Type="Public" Text="MakeLight:static Color" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 13:48:57">
            <Arguments>
              <HAObject Type="Private" Text="c:Color" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 13:18:43" />
            </Arguments>
            <Comment SelectionStart="0" SelectionLength="0" />
            <Source SelectionStart="193" SelectionLength="0">return Color.FromArgb(c.A,
	(int)((double)c.R * ((256.0 - 74.0) / 256.0) + 74.0),
	(int)((double)c.G * ((256.0 - 77.0) / 256.0) + 77.0),
	(int)((double)c.B * ((256.0 - 74.0) / 256.0) + 74.0));
</Source>
          </HAFunc>
        </HAFunc>
        <HAFunc Type="Public" Text="MakeShadow:static Bitmap" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 16:08:32">
          <Arguments>
            <HAObject Type="Private" Text="img:Image" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 13:16:22" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="272" SelectionLength="0">if (img == null) return null;

Bitmap ret = new Bitmap(img);
Size sz = ret.Size;
for (int y = 0; y &lt; sz.Height; y++)
{
	for (int x = 0; x &lt; sz.Width; x++)
	{
		Color c = ret.GetPixel(x, y);
		if (c.A &lt; 1) continue;
		
		ret.SetPixel(x, y, MakeShadow(c));
	}
}
return ret;
</Source>
          <HAFunc Type="Public" Text="MakeShadow:static Color" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/12 18:21:45">
            <Arguments>
              <HAObject Type="Private" Text="c:Color" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 13:22:51" />
            </Arguments>
            <Comment SelectionStart="0" SelectionLength="0" />
            <Source SelectionStart="86" SelectionLength="0">if (c.R + c.G + c.B &lt; 500) return SystemColors.ControlDark;
return Color.Transparent;
</Source>
          </HAFunc>
        </HAFunc>
        <HAFunc Type="Public" Text="RemoveMnemonic:static string" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 0:53:23">
          <Arguments>
            <HAObject Type="Private" Text="text:string" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 0:50:00" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="149" SelectionLength="0">int len = text.Length;
if (len &gt; 4 &amp;&amp; text.EndsWith(")") &amp;&amp; text.Substring(len - 4, 2) == "(&amp;")
{
	return text.Substring(0, len - 4);
}
return text;
</Source>
        </HAFunc>
        <HAFunc Type="Folder" Text="From Girl.Drawing.ImageManipulator" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/15 17:09:05">
          <Arguments />
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="0" SelectionLength="0" />
          <HAFunc Type="Protected" Text="Mix:static Color" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:00:42">
            <Arguments>
              <HAObject Type="Private" Text="c1:Color" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 1:00:30" />
              <HAObject Type="Private" Text="c2:Color" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 1:00:32" />
            </Arguments>
            <Comment SelectionStart="0" SelectionLength="0" />
            <Source SelectionStart="104" SelectionLength="0">return Color.FromArgb(
	(c1.A + c2.A) / 2,
	(c1.R + c2.R) / 2,
	(c1.G + c2.G) / 2,
	(c1.B + c2.B) / 2);
</Source>
          </HAFunc>
          <HAFunc Type="Protected" Text="Mix:static Color" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:00:47">
            <Arguments>
              <HAObject Type="Private" Text="c1:Color" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/06 0:55:31" />
              <HAObject Type="Private" Text="r1:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 0:55:38" />
              <HAObject Type="Private" Text="c2:Color" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 0:55:57" />
              <HAObject Type="Private" Text="r2:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 0:55:59" />
            </Arguments>
            <Comment SelectionStart="0" SelectionLength="0" />
            <Source SelectionStart="176" SelectionLength="0">return Color.FromArgb(
	(c1.A * r1 + c2.A * r2) / (r1 + r2),
	(c1.R * r1 + c2.R * r2) / (r1 + r2),
	(c1.G * r1 + c2.G * r2) / (r1 + r2),
	(c1.B * r1 + c2.B * r2) / (r1 + r2));
</Source>
          </HAFunc>
        </HAFunc>
      </HAFunc>
    </HAFunc>
  </Body>
  <Footer>
    <HAFunc Type="Text" Text="フッタ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/07/06 13:46:26">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="0" SelectionLength="0" />
    </HAFunc>
  </Footer>
</HAClass>