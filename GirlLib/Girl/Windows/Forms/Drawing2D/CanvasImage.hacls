<?xml version="1.0" encoding="utf-8"?>
<HAClass Type="Public" Text="CanvasImage:CanvasObject" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/11 16:53:24">
  <HAObject Type="Protected" Text="image:Image" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/05/13 17:46:46" />
  <Header>
    <HAFunc Type="Text" Text="ヘッダ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/07/05 20:53:36">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0">ここにソースコードの注釈を書きます。
</Comment>
      <Source SelectionStart="88" SelectionLength="0">using System;
using System.Drawing;
using System.Drawing.Drawing2D;
using Girl.Drawing;
</Source>
    </HAFunc>
  </Header>
  <Body>
    <HAFunc Type="Class" Text="本体" IsExpanded="true" IsSelected="false" AllowDrag="false" LastModified="2003/07/01 12:43:27">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="149" SelectionLength="0">public __CLASS() : base() {}
public __CLASS(Image image) : this(0, 0, image) {}
public __CLASS(PointF pt, Image image) : this(pt.X, pt.Y, image) {}

public __CLASS(float x, float y, Image image) : base(x, y, 0F, 0F)
{
	this.Image = image;
}
</Source>
      <HAFunc Type="Protected" Text="Init:override" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/17 15:50:36">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="32" SelectionLength="0">base.Init();
this.image = null;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="Draw:override" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/11 16:53:24">
        <Arguments>
          <HAObject Type="Private" Text="g:Graphics" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/05/20 0:22:17" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="0" SelectionLength="0">if (!this.CheckDraw(g) || this.image == null) return;

RectangleF r = this.rect;
try
{
	Matrix old = g.Transform;
	Matrix m = old.Clone();
	if (r.Width &lt; 0)
	{
		r.X = -r.X;
		r.Width = -r.Width;
		m.Scale(-1F, 1F);
	}
	if (r.Height &lt; 0)
	{
		r.Y = -r.Y;
		r.Height = -r.Height;
		m.Scale(1F, -1F);
	}
	g.Transform = m;
	g.DrawImage(this.image, r);
	g.Transform = old;
	m.Dispose();
}
catch
{
	CanvasRectangle.DrawRectangle(this, g);
}
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="get_Image:Image" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/17 15:51:27">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="19" SelectionLength="0">return this.image;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="set_Image:Image" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/01 13:40:38">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="44" SelectionLength="0">this.image = value;
this.Size = value.Size;
</Source>
      </HAFunc>
    </HAFunc>
  </Body>
  <Footer>
    <HAFunc Type="Text" Text="フッタ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/05/13 14:29:16">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="0" SelectionLength="0" />
    </HAFunc>
  </Footer>
</HAClass>