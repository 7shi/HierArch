<?xml version="1.0" encoding="utf-8"?>
<HAClass Type="Public" Text="CanvasObjectSelection" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 22:18:21">
  <HAObject Type="Protected" Text="target:CanvasObject" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/23 5:10:25" />
  <HAObject Type="Public" Text="Borders:CanvasObject[]" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/23 4:38:17" />
  <HAObject Type="Public" Text="Corners:CanvasCorner[]" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/06/23 4:38:26" />
  <Header>
    <HAFunc Type="Text" Text="ヘッダ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/06/23 5:07:01">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0">ここにソースコードの注釈を書きます。
</Comment>
      <Source SelectionStart="96" SelectionLength="0">using System;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Windows.Forms;
</Source>
    </HAFunc>
  </Header>
  <Body>
    <HAFunc Type="Class" Text="本体" IsExpanded="true" IsSelected="false" AllowDrag="false" LastModified="2003/06/23 20:18:23">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0">&lt;summary&gt;
ここにクラスの説明を書きます。
&lt;/summary&gt;
</Comment>
      <Source SelectionStart="0" SelectionLength="0" />
      <HAFunc Type="Public" Text="__CLASS" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 21:57:57">
        <Arguments>
          <HAObject Type="Private" Text="target:CanvasObject" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/06/23 5:10:33" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0">&lt;summary&gt;
コンストラクタです。
&lt;/summary&gt;
</Comment>
        <Source SelectionStart="50" SelectionLength="0">this.target = target;
target.InitSelection(this);
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="Paint" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/12 11:22:56">
        <Arguments>
          <HAObject Type="Private" Text="e:PaintEventArgs" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/06/23 5:02:54" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="365" SelectionLength="0">foreach (CanvasObject co in this.Borders)
{
	if (co.Visible &amp;&amp; co.ClientRectangle.IntersectsWith(e.ClipRectangle))
	{
		co.Draw(e.Graphics);
	}
}

CanvasCorner[] ccs = this.Corners.Clone() as CanvasCorner[];
Array.Reverse(ccs);
foreach (CanvasCorner cc in ccs)
{
	if (cc.Visible &amp;&amp; cc.ClientRectangle.IntersectsWith(e.ClipRectangle))
	{
		cc.Draw(e.Graphics);
	}
}
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="get_Target:CanvasObject" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/23 20:27:48">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="20" SelectionLength="0">return this.target;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="Add" IsExpanded="true" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 22:18:21">
        <Arguments>
          <HAObject Type="Private" Text="corner:CanvasCorner" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 18:44:28" />
          <HAObject Type="Private" Text="index:int" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 18:44:22" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="390" SelectionLength="0">corner.Selection = this;
int len = this.Corners.Length;
CanvasCorner[] ccs = new CanvasCorner[len + 1];
if (index + 1 &gt; 0) Array.Copy(this.Corners, ccs, index + 1);
ccs[index + 1] = corner;
int len2 = len - index - 1;
if (len2 &gt; 0) Array.Copy(this.Corners, index + 1, ccs, index + 2, len2);
this.Corners = ccs;

for (int i = 0; i &lt; this.Corners.Length; i++)
{
	this.Corners[i].Index = i;
}
</Source>
        <HAFunc Type="Public" Text="Add" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 21:54:43">
          <Arguments>
            <HAObject Type="Private" Text="corner:CanvasCorner" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 18:44:28" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="43" SelectionLength="0">this.Add(corner, this.Corners.Length - 1);
</Source>
        </HAFunc>
      </HAFunc>
      <HAFunc Type="Public" Text="Remove" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 21:48:40">
        <Arguments>
          <HAObject Type="Private" Text="index:int" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/13 18:25:03" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="328" SelectionLength="0">int len = this.Corners.Length;
CanvasCorner[] ccs = new CanvasCorner[len - 1];
if (index &gt; 0) Array.Copy(this.Corners, ccs, index);
int len2 = len - index - 1;
if (len2 &gt; 0) Array.Copy(this.Corners, index + 1, ccs, index, len2);
this.Corners = ccs;

for (int i = 0; i &lt; this.Corners.Length; i++)
{
	this.Corners[i].Index = i;
}
</Source>
      </HAFunc>
    </HAFunc>
  </Body>
  <Footer>
    <HAFunc Type="Text" Text="フッタ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/06/23 4:37:24">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="0" SelectionLength="0" />
    </HAFunc>
  </Footer>
</HAClass>