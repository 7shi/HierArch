<?xml version="1.0" encoding="utf-8"?>
<HAClass Type="Public" Text="CanvasButton:CanvasControl" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/16 23:37:30">
  <HAObject Type="Protected" Text="image:Image" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/27 22:35:12" />
  <HAObject Type="Protected" Text="light:Bitmap" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/05/27 22:35:15" />
  <HAObject Type="Protected" Text="shadow:Bitmap" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/27 22:35:18" />
  <HAObject Type="Public" Text="Pushed:bool" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/27 22:39:57" />
  <HAObject Type="Public" Text="Style:Styles" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/27 22:40:01" />
  <HAObject Type="Protected" Text="menuItem:MenuItem" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/28 21:42:37" />
  <Header>
    <HAFunc Type="Text" Text="ヘッダ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/07/06 15:04:18">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="14" SelectionLength="0">using System;
using System.Drawing;
using System.Windows.Forms;
using Girl.Drawing;
using Girl.Windows.Forms;
</Source>
    </HAFunc>
  </Header>
  <Body>
    <HAFunc Type="Class" Text="本体" IsExpanded="true" IsSelected="true" AllowDrag="false" LastModified="2003/07/16 23:37:30">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="187" SelectionLength="0">public __CLASS() : base(0F, 0F, 23F, 22F) {}

public __CLASS(Image image) : this()
{
	this.Image = image;
}

public __CLASS(string name, Image image) : this(image)
{
	this.name = name;
}

public __CLASS(string name, Image image, EventHandler click) : this(name, image)
{
	this.Click += click;
}

public __CLASS(string name, EventHandler click, string toolTip) : this()
{
	this.name = name;
	this.Image = Girl.Windows.Forms.MenuItemEx.GetImage(name);
	this.Click += click;
	this.toolTipText = toolTip;
}

public __CLASS(string name, EventHandler click, string toolTip, Styles style)
	: this(name, click, toolTip)
{
	this.Style = style;
}

public __CLASS(string name, Image image, MenuItem menuItem) : this(name, image)
{
	this.MenuItem = menuItem;
}

public __CLASS(MenuItem menuItem) : this()
{
	this.MenuItem = menuItem;
}

public __CLASS(Girl.Windows.Forms.MenuItemEx menuItemEx) : this()
{
	this.MenuItemEx = menuItemEx;
}

public __CLASS(object obj) : this()
{
	if (obj is MenuItemEx)
	{
		this.MenuItemEx = obj as MenuItemEx;
	}
	else if (obj is MenuItem)
	{
		this.MenuItem = obj as MenuItem;
	}
}

public __CLASS(Girl.Windows.Forms.MenuItemEx menuItemEx, EventHandler click)
	: this(menuItemEx)
{
	this.Click += click;
}

public enum Styles
{
	PushButton, ToggleButton
}
</Source>
      <HAFunc Type="Protected" Text="Init:override" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 15:09:40">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="14" SelectionLength="0">base.Init();

this.Pushed = false;
this.Style = Styles.PushButton;
this.menuItem = null;
this.image = null;
this.light = null;
this.shadow = null;
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="get_Image:Image" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/05/28 9:17:40">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="19" SelectionLength="0">return this.image;
</Source>
        <HAFunc Type="Public" Text="set_Image:Image" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 15:08:53">
          <Arguments />
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="318" SelectionLength="0">if (this.light  != null) this.light .Dispose();
if (this.shadow != null) this.shadow.Dispose();

this.image = value;
if (value != null)
{
	this.light  = Girl.Windows.Forms.MenuItemEx.MakeLight(value);
	this.shadow = Girl.Windows.Forms.MenuItemEx.MakeShadow(value);
}
else
{
	this.light  = null;
	this.shadow = null;
}
</Source>
        </HAFunc>
      </HAFunc>
      <HAFunc Type="Public" Text="Draw:override" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/11 16:54:29">
        <Arguments>
          <HAObject Type="Private" Text="g:Graphics" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/05/27 21:54:20" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="33" SelectionLength="0">if (!this.CheckDraw(g)) return;

RectangleF r = this.rect;
bool pushing = (this.button &amp; MouseButtons.Left) != MouseButtons.None;

int t1 = 0, t2 = 0;

if (this.enabled)
{
	if (!this.Pushed)
	{
		if (!pushing)
		{
			t1 = t2 = (!this.isUnderMouse) ? 0 : 1;
		}
		else
		{
			t1 = t2 = (this.isUnderMouse) ? 2 : 1;
		}
	}
	else
	{
		t1 = (!pushing &amp;&amp; !this.isUnderMouse) ? 1 : 2;
		t2 = 2;
	}
}
else
{
	t2 = 3;
}

if (t1 != 0)
{
	Brush brush = new SolidBrush(
		Girl.Windows.Forms.MenuItemEx.GetSelectionColor(t1 != 1));
	g.FillRectangle(brush, r.X, r.Y, r.Width - 1F, r.Height - 1F);
	brush.Dispose();
	g.DrawRectangle(pen, r.X, r.Y, r.Width - 1F, r.Height - 1F);
}
if (this.Image == null) return;

switch (t2)
{
	case 0:
		g.DrawImage(this.light, r.X + 3F, r.Y + 3F);
		break;
	case 1:
		g.DrawImage(this.shadow, r.X + 4F, r.Y + 4F);
		g.DrawImage(this.image, r.X + 2F, r.Y + 2F);
		break;
	case 2:
		g.DrawImage(this.image, r.X + 3F, r.Y + 3F);
		break;
	case 3:
		g.DrawImage(this.shadow, r.X + 3F, r.Y + 3F);
		break;
}
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="PerformClick:virtual" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/27 22:37:19">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="31" SelectionLength="0">this.OnClick(EventArgs.Empty);
</Source>
      </HAFunc>
      <HAFunc Type="Protected" Text="OnClick:override" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 20:03:43">
        <Arguments>
          <HAObject Type="Private" Text="e:EventArgs" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/05/28 15:57:18" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="148" SelectionLength="0">if (this.Style == Styles.ToggleButton)
{
	this.Pushed = !this.Pushed;
}

base.OnClick(e);

if (this.menuItem != null) this.menuItem.PerformClick();
</Source>
      </HAFunc>
      <HAFunc Type="Protected" Text="OnDoubleClick:override" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/11 11:19:01">
        <Arguments>
          <HAObject Type="Private" Text="e:EventArgs" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/05/28 15:57:18" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="40" SelectionLength="0">if (this.Style == Styles.ToggleButton)
{
	this.Pushed = !this.Pushed;
}

base.OnDoubleClick(e);

if (this.menuItem != null) this.menuItem.PerformClick();
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="get_MenuItem:MenuItem" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:28:15">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="22" SelectionLength="0">return this.menuItem;
</Source>
        <HAFunc Type="Public" Text="set_MenuItem:MenuItem" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/13 0:59:25">
          <Arguments />
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="97" SelectionLength="0">this.menuItem = value;
this.Enabled = value.Enabled;

string tip = Girl.Windows.Forms.MenuItemEx.RemoveMnemonic(value.Text);
if (value.Shortcut != Shortcut.None)
{
	tip += " (" + Girl.Windows.Forms.MenuItemEx.GetShortcutText(value.Shortcut) + ")";
}
this.ToolTipText = tip;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="set_MenuItemEx:MenuItemEx" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/06 14:58:46">
          <Arguments />
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="82" SelectionLength="0">this.name = value.Name;
this.MenuItem = value.MenuItem;
this.Image = value.Image;
</Source>
        </HAFunc>
      </HAFunc>
    </HAFunc>
  </Body>
  <Footer>
    <HAFunc Type="Text" Text="フッタ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/05/27 21:50:24">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="0" SelectionLength="0" />
    </HAFunc>
  </Footer>
</HAClass>