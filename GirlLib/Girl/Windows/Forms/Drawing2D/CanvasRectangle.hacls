<?xml version="1.0" encoding="utf-8"?>
<HAClass Type="Public" Text="CanvasRectangle:CanvasObject" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/07/14 4:21:32">
  <Header>
    <HAFunc Type="Text" Text="ヘッダ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/07/05 20:52:59">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0">ここにソースコードの注釈を書きます。
</Comment>
      <Source SelectionStart="88" SelectionLength="0">using System;
using System.Drawing;
using System.Drawing.Drawing2D;
using Girl.Drawing;
</Source>
    </HAFunc>
  </Header>
  <Body>
    <HAFunc Type="Class" Text="本体" IsExpanded="true" IsSelected="false" AllowDrag="false" LastModified="2003/07/01 12:43:14">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="120" SelectionLength="0">public __CLASS() : base() {}
public __CLASS(float x, float y, float width, float height) : base(x, y, width, height) {}
public __CLASS(RectangleF rect) : base(rect) {}
</Source>
      <HAFunc Type="Public" Text="Draw:override" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/22 22:54:30">
        <Arguments>
          <HAObject Type="Private" Text="g:Graphics" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/05/20 0:22:17" />
        </Arguments>
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="32" SelectionLength="0">__CLASS.DrawRectangle(this, g);
</Source>
      </HAFunc>
      <HAFunc Type="Public" Text="DrawRectangle:static" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/22 22:54:37">
        <Arguments>
          <HAObject Type="Private" Text="co:CanvasObject" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/06/22 22:51:56" />
          <HAObject Type="Private" Text="g:Graphics" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/20 0:22:17" />
        </Arguments>
        <HAObject Type="Private" Text="rect:RectangleF" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/06/21 14:12:43" />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="202" SelectionLength="0">@[Rectangle(rect) = Rectangle(co.Bounds)の絶対値]
if (co.Brush != null)
{
	g.FillRectangle(co.Brush, rect);
}
if (co.Pen != null)
{
	g.DrawRectangle(co.Pen, rect.Left, rect.Top, rect.Width, rect.Height);
}
</Source>
      </HAFunc>
      <HAFunc Type="Folder" Text="交差" IsExpanded="true" IsSelected="false" AllowDrag="true" LastModified="2003/06/25 8:10:38">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="0" SelectionLength="0" />
        <HAFunc Type="Public" Text="Contains:override bool" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/25 8:51:59">
          <Arguments>
            <HAObject Type="Private" Text="matrix:Matrix" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/06/21 21:54:02" />
            <HAObject Type="Private" Text="angle:float" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/21 15:35:31" />
            <HAObject Type="Private" Text="pt:PointF" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/13 15:53:34" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="0" SelectionLength="0">if (this.brush != null) return base.Contains(matrix, angle, pt);

Matrix m = matrix.Clone();
this.Rotate(m, angle);
float sc = Geometry.GetScale(m);
PointF[] pts = Geometry.ConvertToPoints(this.rect);
m.TransformPoints(pts);
m.Dispose();

int len = pts.Length;
for (int i = 0; i &lt; len; i++)
{
	int j = i + 1;
	if (j == len) j = 0;
	if (CanvasLine.Contains(this, sc, pts[i], pts[j], pt)) return true;
}
return false;
</Source>
        </HAFunc>
        <HAFunc Type="Public" Text="IntersectsWith:override bool" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/25 9:13:45">
          <Arguments>
            <HAObject Type="Private" Text="matrix:Matrix" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/06/21 21:43:51" />
            <HAObject Type="Private" Text="angle:float" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/06/21 15:34:13" />
            <HAObject Type="Private" Text="rect:RectangleF" IsExpanded="false" IsSelected="false" AllowDrag="true" LastModified="2003/05/13 15:50:39" />
          </Arguments>
          <Comment SelectionStart="0" SelectionLength="0" />
          <Source SelectionStart="426" SelectionLength="0">if (this.brush != null) return base.IntersectsWith(matrix, angle, rect);

Matrix m = matrix.Clone();
this.Rotate(m, angle);
m.Invert();
PointF[] pts1 = Geometry.ConvertToPoints(rect);
m.TransformPoints(pts1);
m.Dispose();

PointF[] pts2 = Geometry.ConvertToPoints(this.rect);
if (Geometry.IntersectsWith(Geometry.ConvertToEquations(pts1), Geometry.ConvertToEquations(pts2))) return true;
return Geometry.Contains(pts1, pts2);
</Source>
        </HAFunc>
      </HAFunc>
      <HAFunc Type="Protected" Text="SetClientRectangles:override" IsExpanded="false" IsSelected="true" AllowDrag="true" LastModified="2003/07/14 4:21:32">
        <Arguments />
        <Comment SelectionStart="0" SelectionLength="0" />
        <Source SelectionStart="439" SelectionLength="0">this.SetClientRectangle();
if (this.brush != null)
{
	this.SetDefaultClientRectangles();
	return;
}

PointF[] pts = Geometry.ConvertToPoints(this.crect);
this.crects = new RectangleF[]
	{
		new RectangleF(pts[0].X, pts[0].Y, pts[1].X - pts[0].X, 0),
		new RectangleF(pts[1].X, pts[1].Y, 0, pts[2].Y - pts[1].Y),
		new RectangleF(pts[2].X, pts[2].Y, pts[3].X - pts[2].X, 0),
		new RectangleF(pts[3].X, pts[3].Y, 0, pts[0].Y - pts[3].Y)
	};
</Source>
      </HAFunc>
    </HAFunc>
  </Body>
  <Footer>
    <HAFunc Type="Text" Text="フッタ" IsExpanded="false" IsSelected="false" AllowDrag="false" LastModified="2003/05/13 14:29:16">
      <Arguments />
      <Comment SelectionStart="0" SelectionLength="0" />
      <Source SelectionStart="0" SelectionLength="0" />
    </HAFunc>
  </Footer>
</HAClass>